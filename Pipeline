#!/bin/bash

# memory requirement for Ruddle clusters. Applicable to other servers.
#SBATCH --mem=20g 

#Unique name given to each library. This will be provided in a list file for each library.  
file_base=$1

#Call and load neccesary software
module load BWA
module load SAMtools
module load Trimmomatic 
module load CD-HIT
module load BEDTools

#Creates a log for each processing step for each library 
log=${file_base}.Ref_based_ALN.pipeline.log

{

echo "***********************************" 
echo "begin removing human reads for sample: $file_base" 
echo "***********************************" 

cd ${file_base}/Unaligned/

#variables set of each read. Will differ with each sequencing run. For paired end Illumina data
f1=${file_base}_BHWCN5DSXX_L001_R2_001.fastq.gz
f2=${file_base}_BHWCN5DSXX_L001_R2_001.fastq.gz

#hardcoded reference genomes. Made with bwa index
Human_Ref=/home/jrf69/scratch60/DENV_FLDOH/References/GRCh38_latest_genomic.fna.gz
DENV_Ref=/home/jrf69/scratch60/DENV_FLDOH/References/DENV_1234.fasta

#Map reads to reference. 
bwa mem -t 16 $Human_Ref $f1 $f2 > ${file_base}_aln.sam

#.bam to .samp
samtools view -S -b ${file_base}_aln.sam > ${file_base}_aln.bam 

#keep only unmapped reads
samtools view -b -f 4 ${file_base}_aln.bam > ${file_base}_unmapped.bam

#sort final unmapped reads by query name for splitting with bedtools
samtools sort -n ${file_base}_unmapped.bam -o ${file_base}_unmapped_sorted.bam

#get reads that did not map to human genome
bedtools bamtofastq -i ${file_base}_unmapped_sorted.bam -fq ${file_base}_R1_unmapped.fq -fq2 ${file_base}_R2_unmapped.fq

#total reads that remain after removing human reads
echo "**********************************"
echo "Total reads that remain after aligning to human genome for sample: $file_base"
echo $(cat ${file_base}_R1_unmapped.fq | wc -l)/4*2|bc
echo "**********************************"

Remove intermediate files
rm ${file_base}_aln.sam
rm ${file_base}_aln.bam
rm ${file_base}_unmapped.bam

echo "***********************************" 
echo "finished removing human reads for sample: $file_base" 
echo "***********************************" 

#new variables set of each read
f1=${file_base}_R1_unmapped.fq
f2=${file_base}_R2_unmapped.fq

#Trimmomatic to remove low quality reads and Illumina adaptor seqs
java -jar $EBROOTTRIMMOMATIC/trimmomatic-0.39.jar PE -phred33 $f1 $f2 ${file_base}_R1_paired.fq ${file_base}_R1_unpaired.fq.gz ${file_base}_R2_paired.fq ${file_base}_R2_unpaired.fq.gz ILLUMINACLIP:$EBROOTTRIMMOMATIC/adapters/NexteraPE-PE.fa:2:30:10:2:keepBothReads LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36

#new variables set of each read
f1=${file_base}_R1_paired.fq
f2=${file_base}_R2_paired.fq

echo "**********************************"
echo "Total reads that remain after Trimmomatic for sample: $file_base"
echo $(cat ${file_base}_R1_paired.fq | wc -l)/4*2|bc
echo "**********************************"

#cd-hit-dup to remove PCR duplicates. Can adjust -e value for more stringency
cd-hit-dup -i $f1 -i2 $f2 -o ${file_base}_R1_paired_dedup.fq -o2 ${file_base}_R2_paired_dedup.fq -e .01

#new variables set of each read
f1=${file_base}_R1_paired_dedup.fq
f2=${file_base}_R2_paired_dedup.fq

#Map reads to reference
bwa mem -t 16 $DENV_Ref $f1 $f2 > ${file_base}_aln.sam

#.sam to .bam
samtools view -S -b ${file_base}_aln.sam > ${file_base}_aln.bam 

#keep only mapped reads
samtools view -b -F 4 ${file_base}_aln.bam > ${file_base}_mapped.bam

#sort final mapped bam
samtools sort ${file_base}_mapped.bam -o ${file_base}_DENV_mapped_sorted.bam

echo "**********************************"
echo "Total reads that remain after CD-HIT for sample: $file_base"
echo $(cat ${file_base}_R1_paired_dedup.fq | wc -l)/4*2|bc
echo "**********************************"

#Zip remaining fq files
gzip ${file_base}_R1_unmapped.fq
gzip ${file_base}_R2_unmapped.fq
gzip ${file_base}_R1_paired.fq
gzip ${file_base}_R2_paired.fq
gzip ${file_base}_R1_paired_dedup.fq
gzip ${file_base}_R2_paired_dedup.fq

rm ${file_base}_aln.sam
rm ${file_base}_aln.bam
rm ${file_base}_mapped.bam
rm ${file_base}_R2_unpaired.fq.gz
rm ${file_base}_R1_unpaired.fq.gz
rm *.clstr

echo "***********************************" 
echo "finish aligning to DENV ref for sample: $file_base" 
echo "***********************************" 

#finish log file for pipeline 
} 2>&1  | tee -a $log
